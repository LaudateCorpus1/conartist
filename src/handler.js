const { merge } = require('lodash');
const fs = require('fs');
const outdent = require('outdent');
const path = require('path');

const { formatCode, formatJson } = require('./format');
const { load, resolve } = require('./load');

function array(opts) {
  opts = merge(
    {
      joiner: '\n'
    },
    opts
  );
  return function(data, file) {
    return merge(data.join(opts.joiner), load(file) || []);
  };
}

function js() {
  return function(data, file) {
    const resolved = resolve('conartist.js');
    return format(
      outdent`
        // This file is autogenerated to retain the scope the JS is defined in.
        module.exports = require('./${resolved}')['${file}'].data();
      `
    );
  };
}

function json() {
  return function(data, file) {
    const filepath = path.join(process.cwd(), file);
    if (fs.existsSync(filepath)) {
      data = merge(data, require(filepath));
    }
    return formatJson(data);
  };
}

function string() {
  return function(data, file) {
    const filepath = path.join(process.cwd(), file);
    return `${fs.existsSync(filepath) ? fs.readFileSync(filepath) : data}`;
  };
}

module.exports = {
  array,
  js,
  json,
  string
};
